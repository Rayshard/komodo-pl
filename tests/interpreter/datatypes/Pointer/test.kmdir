(program MyProgram
    (entry MyModule Main)
    (module MyModule
        (function Main (params) (returns)
            (Call MyModule TestRWPtr)
            (Call MyModule TestROPtr)

            (LoadConstant (I64 0))
            (Exit)
        )
        (function TestRWPtr (params) (returns)
            (locals
                (RWPtr myPtr)
                (RWPtr myOtherPtr)
            )

            (LoadLocal myPtr)
            (LoadConstant null)
            (Assert EQ)

            (LoadConstant (sizeof I64))
            (Allocate)
            (StoreLocal myPtr)
            (LoadLocal myPtr)
            (LoadConstant null)
            (Assert NEQ)

            (LoadLocal myPtr)
            (LoadMem I64)
            (LoadConstant (I64 0))
            (Assert EQ)

            (LoadConstant (I64 123))
            (LoadLocal myPtr)
            (StoreMem)
            (LoadLocal myPtr)
            (LoadMem I64)
            (LoadConstant (I64 123))
            (Assert EQ)

            (LoadConstant (F32 12.5))
            (LoadLocal myPtr)
            (StoreMem)
            (LoadLocal myPtr)
            (LoadMem F32)
            (LoadConstant (F32 12.5))
            (Assert EQ)

            (LoadLocal myPtr)
            (StoreLocal myOtherPtr)
            (LoadConstant (I8 -1))
            (LoadLocal myOtherPtr)
            (StoreMem)
            (LoadLocal myPtr)
            (LoadMem UI8)
            (LoadConstant (UI8 255))
            (Assert EQ)

            (Return)
        )
        (function TestROPtr (params) (returns)
            (locals
                (ROPtr myPtr)
            )

            (LoadLocal myPtr)
            (LoadConstant null)
            (Assert EQ)

            (LoadConstant (sizeof I64))
            (Allocate)
            (Convert ROPtr)
            (StoreLocal myPtr)
            (LoadLocal myPtr)
            (LoadConstant null)
            (Assert NEQ)

            (LoadLocal myPtr)
            (LoadMem I64)
            (LoadConstant (I64 0))
            (Assert EQ)

            (Return)
        )
    )
)